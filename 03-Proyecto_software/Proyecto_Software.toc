\babel@toc {spanish}{}\relax 
\contentsline {chapter}{\numberline {1}Organización: gestión de proyectos}{6}{chapter.1}%
\contentsline {section}{\numberline {1.1}Requisitos y tareas: funcionalidades a implementar}{8}{section.1.1}%
\contentsline {section}{\numberline {1.2}Estimación de lo que supone cada requisito o tarea}{9}{section.1.2}%
\contentsline {subsection}{\numberline {1.2.1}coste de implementación}{9}{subsection.1.2.1}%
\contentsline {subsection}{\numberline {1.2.2}valor aportado al cliente}{10}{subsection.1.2.2}%
\contentsline {section}{\numberline {1.3}Prioridades: en qué orden abordar los trabajos}{10}{section.1.3}%
\contentsline {section}{\numberline {1.4}Secuenciación de tareas}{13}{section.1.4}%
\contentsline {section}{\numberline {1.5}Seguimiento del progreso}{13}{section.1.5}%
\contentsline {subsection}{\numberline {1.5.1}control de recursos consumidos}{13}{subsection.1.5.1}%
\contentsline {subsection}{\numberline {1.5.2}difusión de información}{14}{subsection.1.5.2}%
\contentsline {chapter}{\numberline {2}Algunos conceptos importantes para obtener software de calidad}{17}{chapter.2}%
\contentsline {section}{\numberline {2.1}GIGO, la calidad en los datos es importante}{17}{section.2.1}%
\contentsline {section}{\numberline {2.2}KISS, cuanto más simple, menos problemas}{18}{section.2.2}%
\contentsline {section}{\numberline {2.3}YAGNI, flexibilidad para evolucionar}{19}{section.2.3}%
\contentsline {section}{\numberline {2.4}Divide y vencerás}{20}{section.2.4}%
\contentsline {section}{\numberline {2.5}Arquitecturas multi-capa}{20}{section.2.5}%
\contentsline {section}{\numberline {2.6}SOLID, responsabilidades claras, cada parte hace lo suyo, y lo hace bien}{21}{section.2.6}%
\contentsline {subsection}{\numberline {2.6.1}\textbf {S}RP (Single Responsibility Principle)}{21}{subsection.2.6.1}%
\contentsline {subsection}{\numberline {2.6.2}\textbf {O}CP (Open Close Principle)}{21}{subsection.2.6.2}%
\contentsline {subsection}{\numberline {2.6.3}\textbf {L}SP (Liskov Substitution Principle)}{21}{subsection.2.6.3}%
\contentsline {subsection}{\numberline {2.6.4}\textbf {I}SP (Interface Segregation Principle)}{22}{subsection.2.6.4}%
\contentsline {subsection}{\numberline {2.6.5}\textbf {D}IP (Dependency Inversion Principle)}{22}{subsection.2.6.5}%
\contentsline {section}{\numberline {2.7}IDEALS, responsabilidades claras, cada parte hace lo suyo, y lo hace bien}{24}{section.2.7}%
\contentsline {subsection}{\numberline {2.7.1}\textbf {I}nterface segregation}{24}{subsection.2.7.1}%
\contentsline {subsection}{\numberline {2.7.2}\textbf {D}eployability}{24}{subsection.2.7.2}%
\contentsline {subsection}{\numberline {2.7.3}\textbf {E}vent-driven}{25}{subsection.2.7.3}%
\contentsline {subsection}{\numberline {2.7.4}\textbf {A}vailability over consistency}{25}{subsection.2.7.4}%
\contentsline {subsection}{\numberline {2.7.5}\textbf {L}oose-coupling}{25}{subsection.2.7.5}%
\contentsline {subsection}{\numberline {2.7.6}\textbf {S}ingle responsibility}{25}{subsection.2.7.6}%
\contentsline {chapter}{\numberline {3}¿Gigantes\ldots ? o ¿Molinos?\ldots }{26}{chapter.3}%
\contentsline {section}{\numberline {3.1}cómo nombrar los distintos elementos ?!?}{26}{section.3.1}%
\contentsline {section}{\numberline {3.2}cómo abrir-cerrar bloques ?!?}{26}{section.3.2}%
\contentsline {section}{\numberline {3.3}qué usar para la indentación: tabuladores ?!? o espacios ?!? }{27}{section.3.3}%
\contentsline {section}{\numberline {3.4}longitud de nombres para variables y funciones ?!?}{27}{section.3.4}%
\contentsline {section}{\numberline {3.5}usar documentación/comentarios externos o hacer que el propio código sea claro de leer ?!?}{27}{section.3.5}%
\contentsline {section}{\numberline {3.6}Un consejo:}{27}{section.3.6}%
\contentsline {chapter}{\numberline {4}Sugerencias desde la cocina, algunas ideas prácticas}{29}{chapter.4}%
\contentsline {section}{\numberline {4.1}La importancia de refactorizar}{29}{section.4.1}%
\contentsline {subsection}{\numberline {4.1.1}rationale tras la refactorización}{30}{subsection.4.1.1}%
\contentsline {subsection}{\numberline {4.1.2}disponer de una red de seguridad, facilita la refactorización}{30}{subsection.4.1.2}%
\contentsline {section}{\numberline {4.2}La importancia de los tests internos}{30}{section.4.2}%
\contentsline {section}{\numberline {4.3}La forma natural de construir software es construirlo de forma iterativa}{31}{section.4.3}%
\contentsline {section}{\numberline {4.4}Cuando utilices un estandar o paradigma conocido\ldots }{32}{section.4.4}%
\contentsline {section}{\numberline {4.5}Realizar ``Hello, world''s para aprender}{32}{section.4.5}%
\contentsline {section}{\numberline {4.6}Números, Fechas y otras hierbas similares: cada cual las escribe diferente}{36}{section.4.6}%
\contentsline {section}{\numberline {4.7}Magnitudes: números con unidad de medida}{36}{section.4.7}%
\contentsline {section}{\numberline {4.8}Códigos: identificar elementos}{36}{section.4.8}%
\contentsline {subsection}{\numberline {4.8.1}Una nota histórica:}{36}{subsection.4.8.1}%
\contentsline {subsection}{\numberline {4.8.2}Algunos consejos:}{37}{subsection.4.8.2}%
\contentsline {subsection}{\numberline {4.8.3}A tener en cuenta cuando haya varias partes que asignan codigos de forma distribuida}{38}{subsection.4.8.3}%
\contentsline {subsection}{\numberline {4.8.4}Algunas reflexiones acerca de la cantidad de códigos posibles:}{38}{subsection.4.8.4}%
\contentsline {subsection}{\numberline {4.8.5}El uso de UUIDs como identificadores internos de elementos}{39}{subsection.4.8.5}%
\contentsline {section}{\numberline {4.9}Un truco muy útil: identificadores internos solo para uso interno e identificadores externos solo para uso externo}{39}{section.4.9}%
\contentsline {section}{\numberline {4.10}Un truco muy útil: inactivar elementos en vez de borrarlos}{40}{section.4.10}%
\contentsline {section}{\numberline {4.11}Una forma de recoger especificaciones: BDD (Behavior Driven Development)}{41}{section.4.11}%
\contentsline {section}{\numberline {4.12}Una reflexión acerca de las ventajas de manejar datos inmutables}{43}{section.4.12}%
\contentsline {section}{\numberline {4.13}Una reflexión personal acerca de poner controles en el programa para evitar ``errores de usuario''}{45}{section.4.13}%
\contentsline {chapter}{\numberline {5}Unas notas históricas para situarnos en los distintos marcos temporales}{48}{chapter.5}%
\contentsline {chapter}{\numberline {6}Libros}{50}{chapter.6}%
\contentsline {section}{\numberline {6.1}muy recomendables}{50}{section.6.1}%
\contentsline {section}{\numberline {6.2}interesantes}{54}{section.6.2}%
\contentsline {section}{\numberline {6.3}enlaces y referencias}{56}{section.6.3}%
\contentsline {chapter}{\numberline {7}apéndice: un repaso rápido sobre algunos conceptos importantes.}{58}{chapter.7}%
\contentsline {section}{\numberline {7.1}Herramientas}{58}{section.7.1}%
\contentsline {subsection}{\numberline {7.1.1}Editor, compilador (``compiler'') y enlazador (``linker'')}{59}{subsection.7.1.1}%
\contentsline {subsection}{\numberline {7.1.2}Automatización del proceso de compilación}{59}{subsection.7.1.2}%
\contentsline {subsection}{\numberline {7.1.3}El compilador es tu mejor aliado,... si le permites supervisar el código.}{60}{subsection.7.1.3}%
\contentsline {subsection}{\numberline {7.1.4}El tratamiento de excepciones también es tu aliado,... si no lo usas para enterrar la cabeza bajo el suelo e ignorar las excepciones.}{61}{subsection.7.1.4}%
\contentsline {subsection}{\numberline {7.1.5}Depurador (``debugger'')}{62}{subsection.7.1.5}%
\contentsline {subsection}{\numberline {7.1.6}Marco de ejecución de pruebas\\(``test framework'')}{63}{subsection.7.1.6}%
\contentsline {subsection}{\numberline {7.1.7}Gestor de versiones (``version control'')}{63}{subsection.7.1.7}%
\contentsline {subsection}{\numberline {7.1.8}La documentación del sistema}{65}{subsection.7.1.8}%
\contentsline {subsection}{\numberline {7.1.9}Comprobador estático de código (``linter'')}{66}{subsection.7.1.9}%
\contentsline {subsection}{\numberline {7.1.10}Analizador de rendimiento (``profiler'')}{67}{subsection.7.1.10}%
\contentsline {subsection}{\numberline {7.1.11}Automatización de todo el proceso:\\estratégias ``CI/CD'' y enfoque ``DevOps''}{67}{subsection.7.1.11}%
\contentsline {section}{\numberline {7.2}Paradigmas y lenguajes de programación}{69}{section.7.2}%
\contentsline {subsection}{\numberline {7.2.1}Imperativo/procedural : máquina}{70}{subsection.7.2.1}%
\contentsline {subsection}{\numberline {7.2.2}Imperativo/procedural : estructurado}{72}{subsection.7.2.2}%
\contentsline {subsection}{\numberline {7.2.3}Orientado a objeto}{75}{subsection.7.2.3}%
\contentsline {subsection}{\numberline {7.2.4}Funcional}{80}{subsection.7.2.4}%
\contentsline {section}{\numberline {7.3}Encapsulación}{83}{section.7.3}%
\contentsline {section}{\numberline {7.4}Arquitecturas de software}{86}{section.7.4}%
\contentsline {subsection}{\numberline {7.4.1}Según se reparte el código, se puede distinguir entre:}{86}{subsection.7.4.1}%
\contentsline {subsubsection}{Pella de arcilla (``ball of mud'')}{86}{section*.17}%
\contentsline {subsubsection}{Monolito}{86}{section*.18}%
\contentsline {subsubsection}{Distribuido}{87}{section*.19}%
\contentsline {subsection}{\numberline {7.4.2}Según cómo se reparte la funcionalidad, se puede distinguir entre:}{88}{subsection.7.4.2}%
\contentsline {subsubsection}{Desktop, ``de escritorio''}{88}{section*.20}%
\contentsline {subsubsection}{Cliente/Servidor}{88}{section*.21}%
\contentsline {subsubsection}{(micro)Servicios distribuidos}{88}{section*.22}%
\contentsline {section}{\numberline {7.5}Patrones de programación (patterns)}{89}{section.7.5}%
\contentsline {subsection}{\numberline {7.5.1}Rationale, el por qué de los patrones}{89}{subsection.7.5.1}%
\contentsline {subsection}{\numberline {7.5.2}Ejemplos de algunos patrones}{90}{subsection.7.5.2}%
\contentsline {subsubsection}{observer}{90}{section*.23}%
\contentsline {subsubsection}{chain of responsibility}{90}{section*.24}%
\contentsline {subsubsection}{command}{90}{section*.25}%
\contentsline {subsubsection}{memento}{90}{section*.26}%
\contentsline {subsubsection}{adapter}{90}{section*.27}%
\contentsline {subsubsection}{decorator}{90}{section*.28}%
\contentsline {subsubsection}{facade}{90}{section*.29}%
\contentsline {subsubsection}{proxy}{91}{section*.30}%
\contentsline {section}{\numberline {7.6}Algoritmos}{91}{section.7.6}%
\contentsline {subsection}{\numberline {7.6.1}Ordenación, clasificación y búsqueda}{91}{subsection.7.6.1}%
\contentsline {subsubsection}{búsquedas directas}{91}{section*.31}%
\contentsline {subsubsection}{estructuración arbórea}{92}{section*.32}%
\contentsline {subsubsection}{estructuración indexada}{92}{section*.33}%
\contentsline {subsubsection}{estructuración semántica}{92}{section*.34}%
\contentsline {subsection}{\numberline {7.6.2}Cálculo numérico o simbólico}{92}{subsection.7.6.2}%
\contentsline {subsubsection}{ecuaciones lineales}{92}{section*.35}%
\contentsline {subsubsection}{derivación e integración}{92}{section*.36}%
\contentsline {subsubsection}{series de Taylor}{92}{section*.37}%
\contentsline {subsubsection}{transformadas de Fourier}{93}{section*.38}%
\contentsline {subsection}{\numberline {7.6.3}Optimización, programación lineal}{93}{subsection.7.6.3}%
\contentsline {subsection}{\numberline {7.6.4}Combinatorios}{93}{subsection.7.6.4}%
\contentsline {subsubsection}{búsqueda por ``fuerza bruta''}{93}{section*.39}%
\contentsline {subsubsection}{búsquedas reducidas, en profundidad o en anchura}{94}{section*.40}%
\contentsline {subsubsection}{heurísticas}{94}{section*.41}%
\contentsline {subsubsection}{métodos de Montecarlo}{95}{section*.42}%
\contentsline {subsection}{\numberline {7.6.5}Algoritmos que aprenden}{95}{subsection.7.6.5}%
\contentsline {subsection}{\numberline {7.6.6}Algoritmos que evolucionan}{95}{subsection.7.6.6}%
